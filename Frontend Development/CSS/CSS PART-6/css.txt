Grid
    settig a container's display to grid will make all children grid items

    syntax:
        container{
            display:grid;
        }

    grid model
        grid lines
        grid cell
        grid track

    grid template
        they define the lines & track sizing
            grid-template-rows:
            grid-template-columns:

    grid template(repeat)
        repeat is used to divide all available space
            grid-template-rows:repeat(count,1fr)
            grid-template-columns:repeat(count,1fr)

    grid gaps
        they define the gaps between the lines
            row-gaps
            column-gaps
            grid-gaps

    grid coluumns
        define an items starting & ending position inside the column

        grid-column-start:line_number
        grid-column-end:line_number

    grid rows
        define an items starting & ending position inside the row

        grid-row-start:line_number
        grid-row-end:line_number

    grid properties
        justify-items(container)  // horizontal
        justify-self(item)

        align-items(container) // vertical
        align-self(item)

        place-items
        place-self
animation
    to animate css elements 
        
        @keyframe myname{
            from{font-size:20px}
            to{font-size:40px}
        }

    Animation properties
        animation-name
        animation-duration
        animation-timing-function
        animation-delay
        animation-iteration-count
        animation-direction

    animation shorthand
        animation: name | duration | timing-function | delay |iteration-count | direction

    % animation
        @keyframe myName{
            0%{font-size:20px;}
            50%{font-size:30px;}
            100%{font-size:40px;}
        }

Media Queries
    Help create a responsive website

    media features - width(of viewport)
        
        @media(width:400px){
            div{
                background-color:red;
            }
        }

    media query ( orientation )

        @media(orientation:landscape){
            div{
                background-color:red;
            }
        }

Z-index
    It decides the stack level of elements
    Overlapping elements with a larger z-index cover those with a smaller one 
        z-index:auto(0)
        z-index:1/2/..
        z-index:-1/-2/...
        
